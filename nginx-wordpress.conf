server {
    server_name    DOMAIN.com www.DOMAIN.com;
    root           /var/www/FOLDER;
    index          index.html index.php;

    # Location directives to deny public acess (according to htaccess files)
    # block one full folder (and all files in it, and all subfolders)
    location ^~ /wp-content/updraft { deny all;}

    # example to block one specific file
    # location = /wp-content/uploads/download-manager-files/epos_logo.jpg { deny all;}


    # Common deny or drop locations for wordpress
    location ~* wp-config.php { deny all; }
    location ~* wp-admin/includes { deny all; }
    # location ~* wp-includes/.*\.php$ { deny all; }
    location ~ /\. { access_log off; log_not_found off; deny all; }
    location ~ ~$ { access_log off; log_not_found off; deny all; }

    # block trying to access directory above via /../..
    if ($request_uri ~ \.\.) { return 403; }


     # Prevent scripts from running in /uploads
     location ~* ^/wp-content/uploads/.*.(html|htm|shtml|php)$ {
        types { }
        default_type text/plain;
     }

    # general location block for wordpress
    location / {
      # try_files $uri $uri/ =404;
        try_files $uri $uri/ /index.php$is_args$args;

      # Include W3TC nginx.conf file found in WordPress root -> attention: can ause 404s!
      # include /var/www/FOLDER/nginx.conf;
    }
	
    # for wordpress in subdirectory -> need to add special directive, otherwise "no input file specified" on permalinks
    # location /SUBDIRECTORY {
    #    try_files $uri $uri/ /SUBDIRECTORY/index.php?$args /SUBDIRECTORY/index.php?q=$uri&$args;
    # }

    location ~* \.php$ {
      fastcgi_pass unix:/run/php/php7.2-fpm.sock;
      include         fastcgi_params;
      fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
      fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
    }

    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt { log_not_found off; access_log off; allow all; }
    location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
        expires max;
        log_not_found off;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny all;
    }


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl http2; # managed by Certbot
    # listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/DOMAIN.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {
    if ($host = www.DOMAIN.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = DOMAIN.com) {
        return 301 https://www.$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;
    server_name    DOMAIN.com www.DOMAIN.com;
    return 404; # managed by Certbot

}
